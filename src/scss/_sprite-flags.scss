// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$flag-at-name: 'flag-at';
$flag-at-x: 0px;
$flag-at-y: 0px;
$flag-at-offset-x: 0px;
$flag-at-offset-y: 0px;
$flag-at-width: 24px;
$flag-at-height: 16px;
$flag-at-total-width: 72px;
$flag-at-total-height: 48px;
$flag-at-image: '../img/sprite_flags_24x16.png';
$flag-at: (0px, 0px, 0px, 0px, 24px, 16px, 72px, 48px, '../img/sprite_flags_24x16.png', 'flag-at', );
$flag-ca-name: 'flag-ca';
$flag-ca-x: 24px;
$flag-ca-y: 0px;
$flag-ca-offset-x: -24px;
$flag-ca-offset-y: 0px;
$flag-ca-width: 24px;
$flag-ca-height: 16px;
$flag-ca-total-width: 72px;
$flag-ca-total-height: 48px;
$flag-ca-image: '../img/sprite_flags_24x16.png';
$flag-ca: (24px, 0px, -24px, 0px, 24px, 16px, 72px, 48px, '../img/sprite_flags_24x16.png', 'flag-ca', );
$flag-de-name: 'flag-de';
$flag-de-x: 0px;
$flag-de-y: 16px;
$flag-de-offset-x: 0px;
$flag-de-offset-y: -16px;
$flag-de-width: 24px;
$flag-de-height: 16px;
$flag-de-total-width: 72px;
$flag-de-total-height: 48px;
$flag-de-image: '../img/sprite_flags_24x16.png';
$flag-de: (0px, 16px, 0px, -16px, 24px, 16px, 72px, 48px, '../img/sprite_flags_24x16.png', 'flag-de', );
$flag-kz-name: 'flag-kz';
$flag-kz-x: 24px;
$flag-kz-y: 16px;
$flag-kz-offset-x: -24px;
$flag-kz-offset-y: -16px;
$flag-kz-width: 24px;
$flag-kz-height: 16px;
$flag-kz-total-width: 72px;
$flag-kz-total-height: 48px;
$flag-kz-image: '../img/sprite_flags_24x16.png';
$flag-kz: (24px, 16px, -24px, -16px, 24px, 16px, 72px, 48px, '../img/sprite_flags_24x16.png', 'flag-kz', );
$flag-om-name: 'flag-om';
$flag-om-x: 0px;
$flag-om-y: 32px;
$flag-om-offset-x: 0px;
$flag-om-offset-y: -32px;
$flag-om-width: 24px;
$flag-om-height: 16px;
$flag-om-total-width: 72px;
$flag-om-total-height: 48px;
$flag-om-image: '../img/sprite_flags_24x16.png';
$flag-om: (0px, 32px, 0px, -32px, 24px, 16px, 72px, 48px, '../img/sprite_flags_24x16.png', 'flag-om', );
$flag-ru-name: 'flag-ru';
$flag-ru-x: 24px;
$flag-ru-y: 32px;
$flag-ru-offset-x: -24px;
$flag-ru-offset-y: -32px;
$flag-ru-width: 24px;
$flag-ru-height: 16px;
$flag-ru-total-width: 72px;
$flag-ru-total-height: 48px;
$flag-ru-image: '../img/sprite_flags_24x16.png';
$flag-ru: (24px, 32px, -24px, -32px, 24px, 16px, 72px, 48px, '../img/sprite_flags_24x16.png', 'flag-ru', );
$flag-ua-name: 'flag-ua';
$flag-ua-x: 48px;
$flag-ua-y: 0px;
$flag-ua-offset-x: -48px;
$flag-ua-offset-y: 0px;
$flag-ua-width: 24px;
$flag-ua-height: 16px;
$flag-ua-total-width: 72px;
$flag-ua-total-height: 48px;
$flag-ua-image: '../img/sprite_flags_24x16.png';
$flag-ua: (48px, 0px, -48px, 0px, 24px, 16px, 72px, 48px, '../img/sprite_flags_24x16.png', 'flag-ua', );
$flag-us-name: 'flag-us';
$flag-us-x: 48px;
$flag-us-y: 16px;
$flag-us-offset-x: -48px;
$flag-us-offset-y: -16px;
$flag-us-width: 24px;
$flag-us-height: 16px;
$flag-us-total-width: 72px;
$flag-us-total-height: 48px;
$flag-us-image: '../img/sprite_flags_24x16.png';
$flag-us: (48px, 16px, -48px, -16px, 24px, 16px, 72px, 48px, '../img/sprite_flags_24x16.png', 'flag-us', );
$spritesheet-width: 72px;
$spritesheet-height: 48px;
$spritesheet-image: '../img/sprite_flags_24x16.png';
$spritesheet-sprites: ($flag-at, $flag-ca, $flag-de, $flag-kz, $flag-om, $flag-ru, $flag-ua, $flag-us, );
$spritesheet: (72px, 48px, '../img/sprite_flags_24x16.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
